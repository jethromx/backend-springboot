<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/core/domain/Usuario.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/core/domain/Usuario.java" />
              <option name="updatedContent" value="package com.core.domain;&#10;&#10;public class Usuario {&#10;    private Long id;&#10;    private String nombre;&#10;    private String email;&#10;&#10;    public Usuario() {}&#10;&#10;    public Usuario(Long id, String nombre, String email) {&#10;        this.id = id;&#10;        this.nombre = nombre;&#10;        this.email = email;&#10;    }&#10;&#10;    public Long getId() {&#10;        return id;&#10;    }&#10;&#10;    public void setId(Long id) {&#10;        this.id = id;&#10;    }&#10;&#10;    public String getNombre() {&#10;        return nombre;&#10;    }&#10;&#10;    public void setNombre(String nombre) {&#10;        this.nombre = nombre;&#10;    }&#10;&#10;    public String getEmail() {&#10;        return email;&#10;    }&#10;&#10;    public void setEmail(String email) {&#10;        this.email = email;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/core/infraestructure/web/UserController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/core/infraestructure/web/UserController.java" />
              <option name="originalContent" value="package com.core.infraestructure.web;&#10;&#10;&#10;import com.core.application.dto.request.UserRequestDTO;&#10;import com.core.application.dto.response.UserResponseDTO;&#10;import com.core.application.mappers.UserMapper;&#10;import com.core.application.usecases.UserRegistrationCase;&#10;&#10;&#10;import com.core.domain.model.User;&#10;import jakarta.validation.Valid;&#10;import lombok.RequiredArgsConstructor;&#10;import org.springframework.http.HttpStatus;&#10;import org.springframework.http.ResponseEntity;&#10;import org.springframework.web.bind.annotation.PostMapping;&#10;import org.springframework.web.bind.annotation.RequestBody;&#10;import org.springframework.web.bind.annotation.RequestMapping;&#10;import org.springframework.web.bind.annotation.RestController;&#10;&#10;@RestController&#10;@RequestMapping(value = &quot;${api-prefix}/users&quot;)&#10;@RequiredArgsConstructor&#10;public class UserController {&#10;&#10;    private final UserRegistrationCase registerUserCasePort;&#10;    private final UserMapper mapper;&#10;&#10;&#10;    @PostMapping(value = &quot;&quot;, consumes = &quot;application/json&quot;, produces = &quot;application/json&quot;)&#10;&#10;    public ResponseEntity&lt;UserResponseDTO&gt; registerUser(@Valid @RequestBody UserRequestDTO userDTO) {&#10;        User user = mapper.toUser(userDTO);&#10;        user  = registerUserCasePort.registerUser(user);&#10;        UserResponseDTO userResponseDTO = mapper.toResponseDto(user);&#10;        return new ResponseEntity&lt;&gt;(userResponseDTO, HttpStatus.CREATED);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.core.infraestructure.web;&#10;&#10;&#10;import com.core.application.dto.request.UserRequestDTO;&#10;import com.core.application.dto.response.UserResponseDTO;&#10;import com.core.application.mappers.UserMapper;&#10;import com.core.application.usecases.UserRegistrationCase;&#10;&#10;&#10;import com.core.domain.model.User;&#10;import jakarta.validation.Valid;&#10;import lombok.RequiredArgsConstructor;&#10;import org.springframework.http.HttpStatus;&#10;import org.springframework.http.ResponseEntity;&#10;import org.springframework.web.bind.annotation.PostMapping;&#10;import org.springframework.web.bind.annotation.RequestBody;&#10;import org.springframework.web.bind.annotation.RequestMapping;&#10;import org.springframework.web.bind.annotation.RestController;&#10;&#10;import org.slf4j.Logger;&#10;import org.slf4j.LoggerFactory;&#10;&#10;@RestController&#10;@RequestMapping(value = &quot;${api-prefix}/users&quot;)&#10;@RequiredArgsConstructor&#10;public class UserController {&#10;&#10;    private static final Logger logger = LoggerFactory.getLogger(UserController.class);&#10;&#10;    private final UserRegistrationCase registerUserCasePort;&#10;    private final UserMapper mapper;&#10;&#10;&#10;    @PostMapping(value = &quot;&quot;, consumes = &quot;application/json&quot;, produces = &quot;application/json&quot;)&#10;    public ResponseEntity&lt;UserResponseDTO&gt; registerUser(@Valid @RequestBody UserRequestDTO userDTO) {&#10;        logger.info(&quot;Registrando usuario: {}&quot;, userDTO);&#10;        User user = mapper.toUser(userDTO);&#10;        user  = registerUserCasePort.registerUser(user);&#10;        UserResponseDTO userResponseDTO = mapper.toResponseDto(user);&#10;        logger.info(&quot;Usuario registrado exitosamente: {}&quot;, userResponseDTO);&#10;        return new ResponseEntity&lt;&gt;(userResponseDTO, HttpStatus.CREATED);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>